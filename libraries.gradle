ext {
    // library versions
    springBootVersion       ='1.5.3.RELEASE'
    lombokVersion           ='1.16.16'

    restAssuredVersion      = '2.5.0'
    junitVersion            = '4.12'
    festAssertionsVersion   = '1.4'

    guavaVersion            = '22.0'
    slf4jVersion            ='1.7.13'
    logbackVersion          ='1.1.3'
    groovyVersion           = '2.4.11'
    jodaTimeVersion         = '2.2'
    
    springfoxSwagger2Version = "2.7.0"
    springfoxSwaggerUiVersion = "2.7.0"

    dozerVersion            ='5.5.1'

    // libraries
    libraries = [
            lombok               : dependencies.create("org.projectlombok:lombok:${lombokVersion}"),

            hzCast               : dependencies.create("com.hazelcast:hazelcast"),

            guava                : dependencies.create("com.google.guava:guava:${guavaVersion}"),
            
            groovy               : dependencies.create("org.codehaus.groovy:groovy-all:${groovyVersion}"),                    

            jodaTime             : dependencies.create("joda-time:joda-time:${jodaTimeVersion}"),
            springfoxSwagger2    : dependencies.create("io.springfox:springfox-swagger2:${springfoxSwagger2Version}"),
            springfoxSwaggerUi   : dependencies.create("io.springfox:springfox-swagger-ui:${springfoxSwaggerUiVersion}"),

            slf4jApi             : dependencies.create("org.slf4j:slf4j-api:${slf4jVersion}"),
            logbackClassic       : dependencies.create("ch.qos.logback:logback-classic:1.1.3"),
            logbackCore          : dependencies.create("ch.qos.logback:logback-core:1.1.3"),

            spBootStartrTest     : dependencies.create("org.springframework.boot:spring-boot-starter-test"),
            spBootStartrActuator : dependencies.create("org.springframework.boot:spring-boot-starter-actuator"),
            spBootStarterParent  : dependencies.create("org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"),
            junit                : dependencies.create("junit:junit:${junitVersion}"),
            restAssured          : dependencies.create("com.jayway.restassured:rest-assured:${restAssuredVersion}"),
            festAssertions       : dependencies.create("org.easytesting:fest-assert:${festAssertionsVersion}"),

            dozer                :dependencies.create ("net.sf.dozer:dozer:${dozerVersion}"),
            dozerSpring          :dependencies.create ("net.sf.dozer:dozer-spring:${dozerVersion}")

    ]
}


    //compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    //compile("org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion")
    //compile("org.apache.commons:commons-lang3:3.2.1")
    //compile("com.google.guava:guava:16.0.1")
    //compile("org.yaml:snakeyaml:1.13")
    //compile("mysql:mysql-connector-java:5.1.28")
     
    //testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    //testCompile("org.hsqldb:hsqldb:2.3.1")
    //testCompile("junit:junit:4.12")